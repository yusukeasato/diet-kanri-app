<p class="mt-4">Bootstrap</p>
<button type="button" class="btn btn-primary btn-block">ボタン</button>

<p class="mt-4">Bootstrap</p>
<button type="button" class="btn btn-primary btn-block" data-toggle="modal" data-target="#test-modal">モーダル</button>
<!-- ボタンを押したとき，以下のモーダルが出現 -->
<div class="modal fade" id="test-modal" data-backdrop="static" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-sm" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">タイトル</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <p>本文はここに書きます</p>
      </div>
      <div class="modal-footer">
        <p>フッターはここに書きます</p>
      </div>
    </div>
  </div>
</div>

<p class="my-4">flatpickr</p>
<input id="date-form" type="text" placeholder="日付を設定" readonly>
​
<script>
    // カレンダーの表示
    flatpickr('#date-form')
</script>

<p class="my-4">flatpickr</p>
<input class="form-control bg-white" id="date-form" type="text" placeholder="日付を設定" readonly>
​
<script>
    const TODAY = new Date(new Date().setHours(0, 0, 0, 0))
    const A_MONTH_AGO = new Date(TODAY.getFullYear(), TODAY.getMonth() - 1, TODAY.getDate())

    // 選択できない日付データ
    const DISABLE_DATES = ['2019-12-10', '2019-12-20', '2019-12-30', '2020-01-10', '2020-1-20', '2020-01-30']

    // カレンダーの日本語化
    flatpickr.localize(flatpickr.l10ns.ja)

    // カレンダーの表示
    flatpickr('#date-form', {
        // スマートフォンでもカレンダーに「flatpickr」を使用
        disableMobile: true,
        // 1ヶ月前から本日まで選択可
        minDate: A_MONTH_AGO,
        maxDate: TODAY,
        // 選択できない日付
        disable: DISABLE_DATES
    })
</script>

<p class="mt-4">Chart.js</p>
<canvas id="line-chart"></canvas>
​
<script>

    // 折れ線グラフのデータ
    let lineLabel = ['1/1', '1/2', '1/4', '1/5', '1/6', '1/7']
    let lineData = [60.3, 61.1, 60.8, null, 60.5, 61.4]

    // 折れ線グラフのオプション

    const lineChartData = {
        labels: lineLabel,
        datasets: [{
            label: '体重(kg)',
            data: lineData,
            backgroundColor: 'rgba(255, 99, 132, 0.2)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1,
            spanGaps: true
        }]
    }

    const lineChartOption = {
        title: {
            display: true,
            text: '折れ線グラフ'
        },
        tooltips: {
            callbacks: {
                // ホバー（スマホならタップ）時のラベル表示を変更
                title: function (tooltipItems) {
                    return tooltipItems[0].xLabel.replace(/^(\d+).(\d+)$/, ' $1 月 $2 日')
                },
                label: function (tooltipItem) {
                    return '体重: ' + tooltipItem.yLabel + 'kg'
                }
            }
        }
    }

    // 折れ線グラフを表示
    const lineChartContext = document.getElementById("line-chart").getContext('2d')
    new Chart(lineChartContext, {
        type: 'line',
        data: lineChartData,
        options: lineChartOption
    })
</script>

